"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7932],{192:(e,s,a)=>{a.r(s),a.d(s,{assets:()=>t,contentTitle:()=>d,default:()=>j,frontMatter:()=>r,metadata:()=>l,toc:()=>o});const l=JSON.parse('{"id":"commands/run","title":"Run","description":"The run command runs your Scala code:","source":"@site/docs/commands/run.md","sourceDirName":"commands","slug":"/commands/run","permalink":"/docs/commands/run","draft":false,"unlisted":false,"editUrl":"https://github.com/Virtuslab/scala-cli/edit/main/website/docs/commands/run.md","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"title":"Run","sidebar_position":6},"sidebar":"tutorialSidebar","previous":{"title":"Compile","permalink":"/docs/commands/compile"},"next":{"title":"Test","permalink":"/docs/commands/test"}}');var n=a(4848),c=a(8453),i=a(5696);const r={title:"Run",sidebar_position:6},d=void 0,t={},o=[{value:"Passing arguments",id:"passing-arguments",level:2},{value:"Main class",id:"main-class",level:2},{value:"Custom JVM",id:"custom-jvm",level:2},{value:"JVM options",id:"jvm-options",level:3},{value:"JAR",id:"jar",level:3},{value:"Define source files in using directives",id:"define-source-files-in-using-directives",level:2},{value:"Watch mode",id:"watch-mode",level:2},{value:"Watch mode (restart)",id:"watch-mode-restart",level:3},{value:"Scala.js",id:"scalajs",level:2},{value:"Scala Native",id:"scala-native",level:2},{value:"Platform",id:"platform",level:2},{value:"Scala Scripts",id:"scala-scripts",level:2},{value:"Scala CLI from docker",id:"scala-cli-from-docker",level:2},{value:"Debugging",id:"debugging",level:2},{value:"Inject code as JAR file in class path",id:"inject-code-as-jar-file-in-class-path",level:2}];function h(e){const s={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,c.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(s.p,{children:["The ",(0,n.jsx)(s.code,{children:"run"})," command runs your Scala code:"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-scala",metastring:"title=Hello.scala",children:'object Hello {\n  def main(args: Array[String]): Unit =\n    println("Hello")\n}\n'})}),"\n",(0,n.jsxs)(i.Z,{children:[(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"scala-cli run Hello.scala\n"})}),(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-text",children:"Hello\n"})})]}),"\n",(0,n.jsx)(s.p,{children:"This is the default command, so you don\u2019t have to specify it explicitly:"}),"\n",(0,n.jsxs)(i.Z,{children:[(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"scala-cli Hello.scala\n"})}),(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-text",children:"Hello\n"})})]}),"\n",(0,n.jsx)(s.h2,{id:"passing-arguments",children:"Passing arguments"}),"\n",(0,n.jsxs)(s.p,{children:["You can pass arguments to the application or script you're launching after ",(0,n.jsx)(s.code,{children:"--"}),":"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-scala",metastring:"title=app.sc",children:'println(args.mkString("App called with arguments: ", ", ", ""))\n'})}),"\n",(0,n.jsxs)(i.Z,{children:[(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"scala-cli app.sc -- first-arg second-arg\n"})}),(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-text",children:"App called with arguments: first-arg, second-arg\n"})})]}),"\n",(0,n.jsx)(s.h2,{id:"main-class",children:"Main class"}),"\n",(0,n.jsxs)(s.p,{children:["If your application has multiple main classes, the ",(0,n.jsx)(s.code,{children:"--main-class"})," option lets you explicitly specify the main class you\nwant to run:"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-scala",metastring:"title=hi.sc",children:'println("Hi")\n'})}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"scala-cli Hello.scala hi.sc --main-class hi_sc\n"})}),"\n",(0,n.jsx)(s.h2,{id:"custom-jvm",children:"Custom JVM"}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.code,{children:"--jvm"})," lets you run your application with a custom JVM:"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"scala-cli Hello.scala --jvm adopt:14\n"})}),"\n",(0,n.jsxs)(s.p,{children:["You can also specify custom JVM with the using directive ",(0,n.jsx)(s.code,{children:"//> using jvm"}),":"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-scala",metastring:"compile",children:"//> using jvm adopt:14\n"})}),"\n",(0,n.jsxs)(s.p,{children:["JVMs are ",(0,n.jsx)(s.a,{href:"https://get-coursier.io/docs/cli-java#managed-jvms",children:"managed by coursier"}),", and are read from\nthe ",(0,n.jsx)(s.a,{href:"https://github.com/coursier/jvm-index",children:"coursier JVM index"}),".\n(New JVM versions are automatically checked daily, and updates for those are - manually - merged\nswiftly.)"]}),"\n",(0,n.jsx)(s.h3,{id:"jvm-options",children:"JVM options"}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.code,{children:"--java-opt"})," lets you add ",(0,n.jsx)(s.code,{children:"java"})," options which will be passed when running an application:"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"scala-cli Hello.scala --java-opt -Xmx1g --java-opt -Dfoo=bar\n"})}),"\n",(0,n.jsxs)(s.p,{children:["You can also add java options with the using directive ",(0,n.jsx)(s.code,{children:"//> using javaOpt"}),":"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-scala",metastring:"compile",children:"//> using javaOpt -Xmx1g -Dfoo=bar\n"})}),"\n",(0,n.jsxs)(s.p,{children:["Additionally, Java properties can be passed to the executed code without ",(0,n.jsx)(s.code,{children:"--java-prop"}),":"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"scala-cli Hello.scala -Dfoo=bar\n"})}),"\n",(0,n.jsx)(s.h3,{id:"jar",children:"JAR"}),"\n",(0,n.jsx)(s.p,{children:"Scala CLI lets you run JAR files just like any other input."}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",metastring:"ignore",children:"scala-cli Hello.jar\n"})}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-text",children:"Hello World\n"})}),"\n",(0,n.jsxs)(s.p,{children:["When you provide a JAR file as input to Scala CLI, it will be added to the ",(0,n.jsx)(s.code,{children:"classPath"}),"."]}),"\n",(0,n.jsx)(s.h2,{id:"define-source-files-in-using-directives",children:"Define source files in using directives"}),"\n",(0,n.jsxs)(s.p,{children:["You can also add source files with the using directive ",(0,n.jsx)(s.code,{children:"//> using file"}),":"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-scala",metastring:"title=Main.scala",children:"//> using file Utils.scala\n\nobject Main extends App {\n  println(Utils.message)\n}\n"})}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-scala",metastring:"title=Utils.scala",children:'object Utils {\n  val message = "Hello World"\n}\n'})}),"\n",(0,n.jsxs)(s.p,{children:["Scala CLI takes it into account and compiles ",(0,n.jsx)(s.code,{children:"Utils.scala"}),"."]}),"\n",(0,n.jsxs)(i.Z,{children:[(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"scala-cli Main.scala\n"})}),(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-text",children:"Hello World\n"})})]}),"\n",(0,n.jsx)(s.p,{children:"It is also possible to pass multiple paths to source files in a single using directive:"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-scala",metastring:"title=Multiple.scala",children:"//> using files Utils.scala Main.scala\n"})}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"scala-cli run Multiple.scala\n"})}),"\n",(0,n.jsxs)(s.p,{children:["Note that the ",(0,n.jsx)(s.code,{children:"//> using file"})," using directive only supports ",(0,n.jsx)(s.code,{children:".java"}),", ",(0,n.jsx)(s.code,{children:".scala"}),", ",(0,n.jsx)(s.code,{children:".sc"})," files or a directory."]}),"\n",(0,n.jsx)(s.h2,{id:"watch-mode",children:"Watch mode"}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.code,{children:"--watch"})," makes Scala CLI watch your code for changes, and re-runs it upon any change\nor when the ",(0,n.jsx)(s.code,{children:"ENTER"})," key is passed from the command line:"]}),"\n",(0,n.jsxs)(i.Z,{children:[(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",metastring:"ignore",children:"scala-cli run Hello.scala  --watch\n"})}),(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-text",children:"Hello\nProgram exited with return code 0.\nWatching sources, press Ctrl+C to exit, or press Enter to re-run.\nCompiling project (Scala 3.2.2, JVM)\nCompiled project (Scala 3.2.2, JVM)\nHello World\nProgram exited with return code 0.\nWatching sources, press Ctrl+C to exit, or press Enter to re-run.\n"})})]}),"\n",(0,n.jsx)(s.h3,{id:"watch-mode-restart",children:"Watch mode (restart)"}),"\n",(0,n.jsxs)(s.p,{children:["The ",(0,n.jsx)(s.code,{children:"--restart"})," option works very similarly to ",(0,n.jsx)(s.code,{children:"--watch"}),", but instead of waking the sleeping thread,\nit kills the process and restarts the app whenever sources change or the ",(0,n.jsx)(s.code,{children:"ENTER"})," key is passed from the command line."]}),"\n",(0,n.jsxs)(i.Z,{children:[(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",metastring:"ignore",children:"scala-cli run Hello.scala --restart\n"})}),(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-text",children:"Watching sources while your program is running.\nHello\nProgram exited with return code 0.\nWatching sources while your program is running.\nCompiling project (Scala 3.2.2, JVM)\nCompiled project (Scala 3.2.2, JVM)\nHello World\nProgram exited with return code 0.\nWatching sources while your program is running.\n"})})]}),"\n",(0,n.jsx)(s.h2,{id:"scalajs",children:"Scala.js"}),"\n",(0,n.jsxs)(s.p,{children:["Scala.js applications can also be compiled and run with the ",(0,n.jsx)(s.code,{children:"--js"})," option.\nNote that this requires ",(0,n.jsx)(s.code,{children:"node"})," to be ",(0,n.jsx)(s.a,{href:"/install#scala-js",children:"installed"})," on your system:"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"scala-cli Hello.scala --js\n"})}),"\n",(0,n.jsxs)(s.p,{children:["It is also possible to achieve it using ",(0,n.jsx)(s.code,{children:"--platform"})," option:"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"scala-cli Hello.scala --platform js\n"})}),"\n",(0,n.jsxs)(s.p,{children:["See our dedicated ",(0,n.jsx)(s.a,{href:"/docs/guides/advanced/scala-js",children:"Scala.js guide"})," for more information."]}),"\n",(0,n.jsx)(s.h2,{id:"scala-native",children:"Scala Native"}),"\n",(0,n.jsxs)(s.p,{children:["Scala Native applications can be compiled and run with the ",(0,n.jsx)(s.code,{children:"--native"})," option.\nNote that\nthe ",(0,n.jsx)(s.a,{href:"https://scala-native.readthedocs.io/en/latest/user/setup.html#installing-clang-and-runtime-dependencies",children:"Scala Native requirements"}),"\nneed to be ",(0,n.jsx)(s.a,{href:"/install#scala-native",children:"installed"})," for this to work:"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"scala-cli Hello.scala --native -S 2.13\n"})}),"\n",(0,n.jsxs)(s.p,{children:["It is also possible to achieve it using ",(0,n.jsx)(s.code,{children:"--platform"})," option:"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"scala-cli Hello.scala --platform native\n"})}),"\n",(0,n.jsxs)(s.p,{children:["We have a dedicated ",(0,n.jsx)(s.a,{href:"/docs/guides/advanced/scala-native",children:"Scala Native guide"})," as well."]}),"\n",(0,n.jsx)(s.h2,{id:"platform",children:"Platform"}),"\n",(0,n.jsxs)(s.p,{children:["The ",(0,n.jsx)(s.code,{children:"--platform"})," option can be used to choose the platform, which should be used to compile and run application.\nAvailable platforms are:"]}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["JVM (",(0,n.jsx)(s.code,{children:"jvm"}),")"]}),"\n",(0,n.jsxs)(s.li,{children:["Scala.js (",(0,n.jsx)(s.code,{children:"scala.js"})," | ",(0,n.jsx)(s.code,{children:"scala-js"})," | ",(0,n.jsx)(s.code,{children:"scalajs"})," | ",(0,n.jsx)(s.code,{children:"js"}),")"]}),"\n",(0,n.jsxs)(s.li,{children:["Scala Native (",(0,n.jsx)(s.code,{children:"scala-native"})," | ",(0,n.jsx)(s.code,{children:"scalanative"})," | ",(0,n.jsx)(s.code,{children:"native"}),")"]}),"\n"]}),"\n",(0,n.jsxs)(s.p,{children:["Passing the ",(0,n.jsx)(s.code,{children:"--platform"})," along with ",(0,n.jsx)(s.code,{children:"--js"})," or ",(0,n.jsx)(s.code,{children:"--native"})," is not recommended. If two different types of platform are\npassed, Scala CLI throws an error."]}),"\n",(0,n.jsx)(s.h2,{id:"scala-scripts",children:"Scala Scripts"}),"\n",(0,n.jsx)(s.p,{children:"Scala CLI can also compile and run Scala scripts:"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-scala",metastring:"title=HelloScript.sc",children:'#!/ usr / bin / env -S scala -cli shebang\n\nprintln("Hello world from scala script")\n'})}),"\n",(0,n.jsxs)(i.Z,{children:[(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"scala-cli run HelloScript.sc\n"})}),(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-text",children:"Hello world from scala script\n"})})]}),"\n",(0,n.jsxs)(s.p,{children:["Our ",(0,n.jsx)(s.a,{href:"/docs/guides/scripting/scripts",children:"scripts guide"})," provides many more details."]}),"\n",(0,n.jsx)(s.h2,{id:"scala-cli-from-docker",children:"Scala CLI from docker"}),"\n",(0,n.jsxs)(s.p,{children:["Scala applications can also be compiled and run using a ",(0,n.jsx)(s.a,{href:"https://docs.docker.com/get-started/",children:"docker"})," image\nwith Scala CLI, without needing to install Scala CLI manually:"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"docker run virtuslab/scala-cli:latest version\n"})}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-scala",metastring:"title=HelloWorld.scala",children:'object HelloWorld extends App {\n  println("Hello world")\n}\n'})}),"\n",(0,n.jsxs)(i.Z,{children:[(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",metastring:"ignore",children:"docker run  -v $(pwd)/HelloWorld.scala:/HelloWorld.scala virtuslab/scala-cli /HelloWorld.scala\n"})}),(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-text",children:"Hello world\n"})})]}),"\n",(0,n.jsx)(s.h2,{id:"debugging",children:"Debugging"}),"\n",(0,n.jsxs)(s.p,{children:["It is possible to debug code by passing ",(0,n.jsx)(s.code,{children:"--debug"})," flag."]}),"\n",(0,n.jsx)(s.p,{children:"Additional debug options:"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"--debug-mode"})," (attach by default)"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"--debug-port"})," (5005 by default)"]}),"\n"]}),"\n",(0,n.jsx)(s.p,{children:"Available debug modes:"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["Attach (",(0,n.jsx)(s.code,{children:"attach"})," | ",(0,n.jsx)(s.code,{children:"att"})," | ",(0,n.jsx)(s.code,{children:"a"}),")"]}),"\n",(0,n.jsxs)(s.li,{children:["Listen (",(0,n.jsx)(s.code,{children:"listen"})," | ",(0,n.jsx)(s.code,{children:"lis"})," | ",(0,n.jsx)(s.code,{children:"l"}),")"]}),"\n"]}),"\n",(0,n.jsx)(s.p,{children:"Example debugging with scala-cli:"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",metastring:"ignore",children:"scala-cli Foo.scala --debug --debug-mode l --debug-port 5006\n"})}),"\n",(0,n.jsx)(s.h2,{id:"inject-code-as-jar-file-in-class-path",children:"Inject code as JAR file in class path"}),"\n",(0,n.jsxs)(s.p,{children:["If your application inspects its class path, and requires only JAR files in it, use ",(0,n.jsx)(s.code,{children:"--as-jar"})," to\nput the Scala CLI project in the class path as a JAR file rather than as a directory:"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",metastring:"ignore",children:"scala-cli Foo.scala --as-jar\n"})})]})}function j(e={}){const{wrapper:s}={...(0,c.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}},5696:(e,s,a)=>{a.d(s,{Z:()=>i,b:()=>r});a(6540);var l=a(3554),n=a.n(l),c=a(4848);function i(e){let{children:s}=e;return(0,c.jsx)("div",{className:"runnable-command",children:s})}function r(e){let{url:s}=e;return(0,c.jsx)(n(),{playing:!0,loop:!0,muted:!0,controls:!0,width:"100%",height:"",url:s})}}}]);