"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1833],{7833:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"reference/password-options","title":"Password options \u26a1\ufe0f","description":"Using password options is restricted and requires setting the --power option to be used.","source":"@site/docs/reference/password-options.md","sourceDirName":"reference","slug":"/reference/password-options","permalink":"/docs/reference/password-options","draft":false,"unlisted":false,"editUrl":"https://github.com/Virtuslab/scala-cli/edit/main/website/docs/reference/password-options.md","tags":[],"version":"current","sidebarPosition":8,"frontMatter":{"title":"Password options \u26a1\ufe0f","sidebar_position":8},"sidebar":"tutorialSidebar","previous":{"title":"Supported scala versions","permalink":"/docs/reference/scala-versions"},"next":{"title":"Scala CLI as scala","permalink":"/docs/reference/scala-command/"}}');var t=n(4848),r=n(8453);const o={title:"Password options \u26a1\ufe0f",sidebar_position:8},a=void 0,c={},l=[{value:"Environment variable",id:"environment-variable",level:2},{value:"Command printing the secret",id:"command-printing-the-secret",level:2},{value:"File",id:"file",level:2},{value:"Inline",id:"inline",level:2}];function d(e){const s={admonition:"admonition",code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(s.admonition,{type:"caution",children:[(0,t.jsxs)(s.p,{children:["Using password options is restricted and requires setting the ",(0,t.jsx)(s.code,{children:"--power"})," option to be used.\nYou can pass it explicitly or set it globally by running:"]}),(0,t.jsx)(s.p,{children:"scala-cli config power true"})]}),"\n",(0,t.jsx)(s.p,{children:"Some Scala CLI options expect password / secret values. Passing passwords directly on the command-line\nposes security issues, so Scala CLI offers a few ways to work around that.\nPasswords / secrets can be passed: via environment variables, via a command printing the secret, via a file, or (not recommended)\ninline."}),"\n",(0,t.jsx)(s.h2,{id:"environment-variable",children:"Environment variable"}),"\n",(0,t.jsxs)(s.p,{children:["Prefix the environment variable name with ",(0,t.jsx)(s.code,{children:"env:"}),", like"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-text",children:"$ export MY_PASSWORD=1234\n$ scala-cli publish . --repo-password env:MY_PASSWORD\n"})}),"\n",(0,t.jsx)(s.h2,{id:"command-printing-the-secret",children:"Command printing the secret"}),"\n",(0,t.jsxs)(s.p,{children:["Prefix the command printing the secret with ",(0,t.jsx)(s.code,{children:"command:"}),", like"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-text",children:'$ get-secret sonatype-s01 # command printing the secret\n1234\n$ scala-cli publish . --repo-password "command:get-secret sonatype-s01"\n'})}),"\n",(0,t.jsx)(s.p,{children:"Alternatively, if some of the command arguments contain spaces, one can pass a JSON list:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-text",children:'$ get-secret "sonatype s01" # command printing the secret\n1234\n$ scala-cli publish . --repo-password \'command:["get-secret", "sonatype s01"]\'\n'})}),"\n",(0,t.jsx)(s.h2,{id:"file",children:"File"}),"\n",(0,t.jsxs)(s.p,{children:["Prefix the file path with ",(0,t.jsx)(s.code,{children:"file:"}),", like"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-text",children:'$ cat "$HOME/.passwords/sonatype-s01"\n1234\n$ scala-cli publish . --repo-password "file:$HOME/.passwords/sonatype-s01"\n'})}),"\n",(0,t.jsx)(s.h2,{id:"inline",children:"Inline"}),"\n",(0,t.jsxs)(s.p,{children:["This is the less secure way of passing secrets to Scala CLI, and should only be used\nfor debugging purposes, with non-sensitive secrets. Prefix the password / secret value\nwith ",(0,t.jsx)(s.code,{children:"value:"}),", like"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-text",children:"$ scala-cli publish . --repo-password value:1234\n"})})]})}function p(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>o,x:()=>a});var i=n(6540);const t={},r=i.createContext(t);function o(e){const s=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),i.createElement(r.Provider,{value:s},e.children)}}}]);