"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6234],{374:(e,s,t)=>{t.d(s,{A:()=>n});const n=t.p+"assets/images/intellij_module_settings_import_module-906dfd87a9e0e4c3fdff2fa8d049bb3c.png"},4353:(e,s,t)=>{t.d(s,{A:()=>n});const n=t.p+"assets/images/intellij_sbt_module_settings-0aaec262e266b5ef01e82947a027bbda.png"},5696:(e,s,t)=>{t.d(s,{Z:()=>r,b:()=>l});t(6540);var n=t(3554),i=t.n(n),o=t(4848);function r(e){let{children:s}=e;return(0,o.jsx)("div",{className:"runnable-command",children:s})}function l(e){let{url:s}=e;return(0,o.jsx)(i(),{playing:!0,loop:!0,muted:!0,controls:!0,width:"100%",height:"",url:s})}},6589:(e,s,t)=>{t.d(s,{A:()=>n});const n=t.p+"assets/images/intellij_sbt_alongside_bsp-dabc2afe097377849e0c264239efbd59.png"},8961:(e,s,t)=>{t.d(s,{A:()=>n});const n=t.p+"assets/images/intellij_import_bsp_module-a5bccf0d05ba59b09e216ee6a8cbfa3f.png"},9484:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>l,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"cookbooks/ide/intellij-sbt-with-bsp","title":"Scala CLI project in IntelliJ alongside your existing SBT project","description":"If you\'ve read through the basic IDEA IntelliJ cookbook, then you already know how to import a Scala CLI","source":"@site/docs/cookbooks/ide/intellij-sbt-with-bsp.md","sourceDirName":"cookbooks/ide","slug":"/cookbooks/ide/intellij-sbt-with-bsp","permalink":"/docs/cookbooks/ide/intellij-sbt-with-bsp","draft":false,"unlisted":false,"editUrl":"https://github.com/Virtuslab/scala-cli/edit/main/website/docs/cookbooks/ide/intellij-sbt-with-bsp.md","tags":[],"version":"current","sidebarPosition":12,"frontMatter":{"title":"Scala CLI project in IntelliJ alongside your existing SBT project","sidebar_position":12},"sidebar":"tutorialSidebar","previous":{"title":"IntelliJ IDEA setup","permalink":"/docs/cookbooks/ide/intellij"},"next":{"title":"Setup multiple projects in IDEA IntelliJ as separate modules","permalink":"/docs/cookbooks/ide/intellij-multi-bsp"}}');var i=t(4848),o=t(8453),r=t(5696);const l={title:"Scala CLI project in IntelliJ alongside your existing SBT project",sidebar_position:12},a=void 0,c={},d=[];function h(e){const s={a:"a",code:"code",img:"img",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(s.p,{children:["If you've read through ",(0,i.jsx)(s.a,{href:"/docs/cookbooks/ide/intellij",children:"the basic IDEA IntelliJ cookbook"}),", then you already know how to import a Scala CLI\nproject using ",(0,i.jsx)(s.code,{children:"BSP"}),". However, did you know that it's possible to import one alongside an ",(0,i.jsx)(s.code,{children:"SBT"})," project? (Or any other\nbuild tool's project, for that matter.)"]}),"\n",(0,i.jsx)(s.p,{children:"Here's a walk-through for a simple example."}),"\n",(0,i.jsxs)(s.p,{children:["Let's say you have an existing ",(0,i.jsx)(s.code,{children:"SBT"})," project that you're working with for a while now. You have imported it in IntelliJ\nand the integration works nicely.\nThe project's structure looks roughly like this:"]}),"\n",(0,i.jsxs)(r.Z,{children:[(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"tree -a\n"})}),(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-text",children:".\n\u251c\u2500\u2500 .bsp\n\u2502\xa0\xa0 \u2514\u2500\u2500 sbt.json\n\u251c\u2500\u2500 .idea\n\u2502\xa0\xa0 \u251c\u2500\u2500 .gitignore\n\u2502\xa0\xa0 \u251c\u2500\u2500 codeStyles\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 Project.xml\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 codeStyleConfig.xml\n\u2502\xa0\xa0 \u251c\u2500\u2500 libraries\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 sbt__junit_junit_4_13_2_jar.xml\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 sbt__org_hamcrest_hamcrest_core_1_3_jar.xml\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 sbt__org_scala_lang_scala3_library_3_3_1_3_jar.xml\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 sbt__org_scala_lang_scala_library_2_13_8_jar.xml\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 sbt__org_scala_sbt_test_interface_1_0_jar.xml\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 sbt__org_scalameta_junit_interface_1_0_0_M6_jar.xml\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 sbt__org_scalameta_munit_3_1_0_0_M6_jar.xml\n\u2502\xa0\xa0 \u251c\u2500\u2500 misc.xml\n\u2502\xa0\xa0 \u251c\u2500\u2500 modules\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 intellij-sbt-with-scala-cli-bsp-build.iml\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 intellij-sbt-with-scala-cli-bsp.iml\n\u2502\xa0\xa0 \u251c\u2500\u2500 modules.xml\n\u2502\xa0\xa0 \u251c\u2500\u2500 sbt.xml\n\u2502\xa0\xa0 \u251c\u2500\u2500 scala_compiler.xml\n\u2502\xa0\xa0 \u251c\u2500\u2500 vcs.xml\n\u2502\xa0\xa0 \u2514\u2500\u2500 workspace.xml\n\u251c\u2500\u2500 build.sbt\n\u251c\u2500\u2500 project\n\u2502\xa0\xa0 \u2514\u2500\u2500 build.properties\n\u251c\u2500\u2500 scripts\n\u2502\xa0\xa0 \u251c\u2500\u2500 AnotherScript.sc\n\u2502\xa0\xa0 \u2514\u2500\u2500 SomeScript.sc\n\u251c\u2500\u2500 src\n\u2502\xa0\xa0 \u251c\u2500\u2500 main\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 scala\n\u2502\xa0\xa0 \u2502\xa0\xa0     \u2514\u2500\u2500 main.scala\n\u2502\xa0\xa0 \u2514\u2500\u2500 test\n\u2502\xa0\xa0     \u2514\u2500\u2500 scala\n\u2502\xa0\xa0         \u2514\u2500\u2500 MyTests.test.scala\n\u2514\u2500\u2500 target\n    \u2514\u2500\u2500 scala-3.1.3\n        \u251c\u2500\u2500 classes\n        \u2502\xa0\xa0 \u251c\u2500\u2500 main$package$.class\n        \u2502\xa0\xa0 \u251c\u2500\u2500 main$package.class\n        \u2502\xa0\xa0 \u251c\u2500\u2500 main$package.tasty\n        \u2502\xa0\xa0 \u251c\u2500\u2500 main.class\n        \u2502\xa0\xa0 \u2514\u2500\u2500 main.tasty\n        \u2514\u2500\u2500 test-classes\n            \u251c\u2500\u2500 MyTests.class\n            \u2514\u2500\u2500 MyTests.tasty\n\n16 directories, 32 files\n"})})]}),"\n",(0,i.jsx)(s.p,{children:"Now, let's say that at some point you decide you need to occasionally run some scripts relevant to this project. You run\nthose scripts with Scala CLI and decide it'd be convenient to keep them in the same repository."}),"\n",(0,i.jsxs)(r.Z,{children:[(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",metastring:"ignore",children:"tree scripts\n"})}),(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-text",children:"scripts\n\u251c\u2500\u2500 AnotherScript.sc\n\u2514\u2500\u2500 SomeScript.sc\n\n0 directories, 2 files\n"})})]}),"\n",(0,i.jsxs)(s.p,{children:["However, you already import this repo as an ",(0,i.jsx)(s.code,{children:"SBT"})," project, so what can you do?\nWell, you can import the Scala CLI scripts as a ",(0,i.jsx)(s.code,{children:"BSP"})," module ",(0,i.jsx)(s.strong,{children:"alongside"})," your ",(0,i.jsx)(s.code,{children:"SBT"})," project."]}),"\n",(0,i.jsxs)(s.p,{children:["Make sure you setup the ",(0,i.jsx)(s.code,{children:"BSP"})," configuration for the ",(0,i.jsx)(s.code,{children:"scripts"})," directory first:"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",metastring:"ignore",children:"scala-cli setup-ide scripts\n"})}),"\n",(0,i.jsxs)(s.p,{children:["As a result, a ",(0,i.jsx)(s.code,{children:"scripts/.bsp"})," directory should be created.\nNow, right-click on your project root directory in ",(0,i.jsx)(s.code,{children:"IntelliJ"})," and go into ",(0,i.jsx)(s.code,{children:"Module Settings"})]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.img,{alt:"Go into Module Settings",src:t(4353).A+"",width:"1208",height:"1694"})}),"\n",(0,i.jsxs)(s.p,{children:["Then, under ",(0,i.jsx)(s.code,{children:"Project Structure"})," -> ",(0,i.jsx)(s.code,{children:"Modules"})," press the ",(0,i.jsx)(s.code,{children:"+"})," button and then ",(0,i.jsx)(s.code,{children:"Import Module"}),"."]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.img,{alt:"Import a module",src:t(374).A+"",width:"2052",height:"1696"})}),"\n",(0,i.jsxs)(s.p,{children:["Navigate to the ",(0,i.jsx)(s.code,{children:"scripts"})," directory from there and add it as a ",(0,i.jsx)(s.code,{children:"BSP"})," module (",(0,i.jsx)(s.code,{children:"BSP"})," should be an available choice,\nif the ",(0,i.jsx)(s.code,{children:"setup-ide"})," command was run correctly)."]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.img,{alt:"Import from BSP as external model",src:t(8961).A+"",width:"1508",height:"1194"})}),"\n",(0,i.jsxs)(s.p,{children:["Now the ",(0,i.jsx)(s.code,{children:"scripts"})," ",(0,i.jsx)(s.code,{children:"BSP"})," module should be imported and you should be able to run the scripts from your IDE.\nThe end result should look like this:"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.img,{alt:"Import from BSP as external model",src:t(6589).A+"",width:"3578",height:"1980"})})]})}function p(e={}){const{wrapper:s}={...(0,o.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}}}]);