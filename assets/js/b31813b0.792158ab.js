"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5615],{2267:(e,s,n)=>{n.d(s,{Z:()=>c,b:()=>r});n(6540);var i=n(3554),l=n.n(i),a=n(4848);function c(e){let{children:s}=e;return(0,a.jsx)("div",{className:"runnable-command",children:s})}function r(e){let{url:s}=e;return(0,a.jsx)(l(),{playing:!0,loop:!0,muted:!0,controls:!0,width:"100%",height:"",url:s})}},9944:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>d,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>i,toc:()=>t});const i=JSON.parse('{"id":"commands/basics","title":"Basics","description":"Scala CLI is a command line tool that executes a given sub-command on the inputs it\u2019s provided with, using a","source":"@site/docs/commands/basics.md","sourceDirName":"commands","slug":"/commands/basics","permalink":"/docs/commands/basics","draft":false,"unlisted":false,"editUrl":"https://github.com/Virtuslab/scala-cli/edit/main/website/docs/commands/basics.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"title":"Basics","sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Getting started","permalink":"/docs/getting_started"},"next":{"title":"Compile","permalink":"/docs/commands/compile"}}');var l=n(4848),a=n(8453),c=n(2267);const r={title:"Basics",sidebar_position:3},o=void 0,d={},t=[{value:"Input formats",id:"input-formats",level:2},{value:"Source files",id:"source-files",level:2},{value:"Directories",id:"directories",level:2},{value:"URLs",id:"urls",level:2},{value:"GitHub Gist",id:"github-gist",level:3},{value:"Zip archive",id:"zip-archive",level:3},{value:"Piping",id:"piping",level:2},{value:"Scala CLI version",id:"scala-cli-version",level:2},{value:"Process substitution",id:"process-substitution",level:2},{value:"Logging",id:"logging",level:2},{value:"Warning suppression",id:"warning-suppression",level:2}];function h(e){const s={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsxs)(s.p,{children:["Scala CLI is a command line tool that executes a given sub-command on the inputs it\u2019s provided with, using a\ngiven ",(0,l.jsx)(s.a,{href:"/docs/guides/introduction/configuration",children:"configuration"})," to produce a result."]}),"\n",(0,l.jsx)(s.p,{children:"The most important sub-commands are:"}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.a,{href:"/docs/commands/compile",children:"compile"})," compiles your code (excluding tests)"]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.a,{href:"/docs/commands/run",children:"run"})," runs your code using the provided arguments (it\u2019s also used when no other command is provided)"]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.a,{href:"/docs/commands/test",children:"test"})," compiles and runs the tests defined in your code"]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.a,{href:"/docs/commands/package",children:"package"})," packages your code into a jar or other format"]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.a,{href:"/docs/commands/repl",children:"repl"})," / ",(0,l.jsx)(s.a,{href:"/docs/commands/repl",children:"console"})," runs the interactive Scala shell"]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.a,{href:"/docs/commands/fmt",children:"fmt"})," formats your code"]}),"\n"]}),"\n",(0,l.jsx)(s.p,{children:"Scala CLI can also be run without passing any explicit sub-command,\nin which case it defaults to one of the sub-commands based on context:"}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:["if the ",(0,l.jsx)(s.code,{children:"--version"})," option is passed, it prints the ",(0,l.jsx)(s.code,{children:"version"})," command output (unmodified by any other options)"]}),"\n",(0,l.jsxs)(s.li,{children:["if any inputs were passed, it defaults to the ",(0,l.jsx)(s.code,{children:"run"})," sub-command","\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:["and so, ",(0,l.jsx)(s.code,{children:"scala-cli a.scala"})," runs your ",(0,l.jsx)(s.code,{children:"a.scala"})," file"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(s.li,{children:["additionally, when no inputs were passed, it defaults to the ",(0,l.jsx)(s.code,{children:"run"})," sub-command in the following scenarios:","\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:["if a snippet was passed with ",(0,l.jsx)(s.code,{children:"-e"}),", ",(0,l.jsx)(s.code,{children:"--execute-script"}),", ",(0,l.jsx)(s.code,{children:"--execute-scala"}),", ",(0,l.jsx)(s.code,{children:"--execute-java"})," or ",(0,l.jsx)(s.code,{children:"--execute-markdown"})]}),"\n",(0,l.jsxs)(s.li,{children:["if a main class was passed with the ",(0,l.jsx)(s.code,{children:"--main-class"})," option alongside an extra ",(0,l.jsx)(s.code,{children:"--classpath"})]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(s.li,{children:["otherwise if no inputs were passed, it defaults to the ",(0,l.jsx)(s.code,{children:"repl"})," sub-command"]}),"\n"]}),"\n",(0,l.jsx)(s.h2,{id:"input-formats",children:"Input formats"}),"\n",(0,l.jsx)(s.p,{children:"The Scala CLI commands accept input in a number of ways, most notably:"}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsx)(s.li,{children:"as source files"}),"\n",(0,l.jsx)(s.li,{children:"as one or several directories that contain source files"}),"\n",(0,l.jsx)(s.li,{children:"as URLs pointing to sources"}),"\n",(0,l.jsx)(s.li,{children:"by processing source code via piping or process substitution"}),"\n"]}),"\n",(0,l.jsx)(s.p,{children:"Note that all of these input formats can be used alongside each other."}),"\n",(0,l.jsx)(s.h2,{id:"source-files",children:"Source files"}),"\n",(0,l.jsx)(s.p,{children:"Scala CLI accepts the following types of source code:"}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:".scala"})," files, containing Scala code"]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:".sc"})," files, containing Scala scripts (see more in the ",(0,l.jsx)(s.a,{href:"/docs/guides/scripting/scripts",children:"Scripts guide"}),")"]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:".java"})," files, containing Java code"]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:".md"})," files, containing Markdown code (experimental, see more in the ",(0,l.jsx)(s.a,{href:"/docs/guides/power/markdown",children:"Markdown guide"}),")"]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:".c"})," and ",(0,l.jsx)(s.code,{children:".h"})," files, containing C code (only as resources for Scala Native, see more in\nthe ",(0,l.jsx)(s.a,{href:"/docs/guides/advanced/scala-native",children:"Scala Native guide"}),")"]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:".jar"})," files, (see more in the ",(0,l.jsx)(s.a,{href:"run#jar",children:"Run docs"}),")"]}),"\n"]}),"\n",(0,l.jsx)(s.p,{children:"The following example shows the simplest input format.\nFirst, create a source file:"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-scala",metastring:"title=Hello.scala",children:'object Hello {\n  def main(args: Array[String]): Unit =\n    println("Hello from Scala")\n}\n'})}),"\n",(0,l.jsx)(s.p,{children:"Then run it by passing it to Scala CLI:"}),"\n",(0,l.jsxs)(c.Z,{children:[(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-bash",children:"scala-cli Hello.scala\n"})}),(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-text",children:"Hello from Scala\n"})})]}),"\n",(0,l.jsx)(s.p,{children:"You can also split your code into multiple files:"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-scala",metastring:"title=Messages.scala",children:'object Messages {\n  def hello = "Hello from Scala"\n}\n'})}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-scala",metastring:"title=Hello.scala",children:"object Hello {\n  def main(args: Array[String]): Unit =\n    println(Messages.hello)\n}\n"})}),"\n",(0,l.jsx)(s.p,{children:"and the run them with Scala CLI:"}),"\n",(0,l.jsxs)(c.Z,{children:[(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-bash",children:"scala-cli Hello.scala Messages.scala\n"})}),(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-text",children:"Hello from Scala\n"})})]}),"\n",(0,l.jsxs)(s.admonition,{type:"note",children:[(0,l.jsx)(s.p,{children:"Scala CLI compiles only the provided inputs.\nFor example, if we provide only one of the files above:"}),(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-bash",metastring:"fail",children:"scala-cli Hello.scala\n"})}),(0,l.jsx)(s.p,{children:"compilation will fail. Scala CLI compiles only the files it\u2019s given."})]}),"\n",(0,l.jsxs)(s.p,{children:["While this is ",(0,l.jsx)(s.em,{children:"very"})," convenient for projects with just a few files, passing many files this way can be cumbersome and\nerror-prone.\nIn the case of larger projects, passing whole directories can help."]}),"\n",(0,l.jsx)(s.h2,{id:"directories",children:"Directories"}),"\n",(0,l.jsx)(s.p,{children:"Scala CLI accepts whole directories as input."}),"\n",(0,l.jsxs)(s.p,{children:["This is convenient when you have many ",(0,l.jsx)(s.code,{children:".scala"})," files, and passing them all one-by-one on the command line isn't\npractical:"]}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-scala",metastring:"title=my-app/Messages.scala",children:'object Messages {\n  def hello = "Hello from Scala"\n}\n'})}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-scala",metastring:"title=my-app/Hello.scala",children:"object Hello {\n  def main(args: Array[String]): Unit =\n    println(Messages.hello)\n}\n"})}),"\n",(0,l.jsxs)(s.p,{children:["In this case, you can run all the source code files in ",(0,l.jsx)(s.code,{children:"my-app"})," by supplying the directory name:"]}),"\n",(0,l.jsxs)(c.Z,{children:[(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-bash",children:"scala-cli my-app\n"})}),(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-text",children:"Hello from Scala\n"})})]}),"\n",(0,l.jsxs)(s.p,{children:["In our experience, ",(0,l.jsx)(s.code,{children:"scala-cli ."})," is the most used command; it compiles and runs all sources in the current directory."]}),"\n",(0,l.jsxs)(s.admonition,{type:"note",children:[(0,l.jsx)(s.p,{children:"Scala CLI process all files within the specified directories and all of its subdirectories."}),(0,l.jsxs)(s.p,{children:["Scala CLI ignores all subdirectories that start with ",(0,l.jsx)(s.code,{children:"."})," like ",(0,l.jsx)(s.code,{children:".scala-build"})," or ",(0,l.jsx)(s.code,{children:".vscode"}),".\nSuch directories needs to be explicitly provided as inputs."]})]}),"\n",(0,l.jsx)(s.h2,{id:"urls",children:"URLs"}),"\n",(0,l.jsxs)(s.admonition,{type:"warning",children:[(0,l.jsxs)(s.p,{children:["Running unverified code from the internet can be very handy for ",(0,l.jsx)(s.em,{children:"trusted"})," sources, but it can also be really dangerous,\nsince Scala CLI does not provide any sandboxing at this moment."]}),(0,l.jsx)(s.p,{children:"Make sure that you trust the code that you are about to run."})]}),"\n",(0,l.jsxs)(s.p,{children:["Scala CLI accepts input via URLs pointing at ",(0,l.jsx)(s.code,{children:".scala"})," files.\nIt downloads their content, and runs them:"]}),"\n",(0,l.jsxs)(c.Z,{children:[(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-bash",children:"scala-cli https://gist.github.com/alexarchambault/f972d941bc4a502d70267cfbbc4d6343/raw/2691c01984c9249936a625a42e29a822a357b0f6/Test.scala\n"})}),(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-text",children:"Hello from Scala GitHub Gist\n"})})]}),"\n",(0,l.jsx)(s.h3,{id:"github-gist",children:"GitHub Gist"}),"\n",(0,l.jsx)(s.p,{children:"Scala CLI accepts input via Github Gist\u2019s urls.\nIt downloads the gist zip archive and runs it:"}),"\n",(0,l.jsxs)(c.Z,{children:[(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-bash",children:"scala-cli https://gist.github.com/alexarchambault/7b4ec20c4033690dd750ffd601e540ec\n"})}),(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-text",children:"Hello\n"})})]}),"\n",(0,l.jsxs)(s.p,{children:["More details in the ",(0,l.jsx)(s.a,{href:"/docs/cookbooks/introduction/gists",children:"GitHub gists cookbook"}),"."]}),"\n",(0,l.jsx)(s.h3,{id:"zip-archive",children:"Zip archive"}),"\n",(0,l.jsxs)(s.p,{children:["Scala CLI accepts inputs via a ",(0,l.jsx)(s.code,{children:"zip"})," archive path.\nIt unpacks the archive and runs it:"]}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-scala",metastring:"titleHello.scala",children:'object Hello extends App {\n  println("Hello")\n}\n'})}),"\n",(0,l.jsxs)(c.Z,{children:[(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-bash",metastring:"ignore",children:"unzip -l hello.zip\n"})}),(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-text",children:"Archive:  hello.zip\n  Length      Date    Time    Name\n---------  ---------- -----   ----\n       49  12-07-2021 00:06   Hello.scala\n---------                     -------\n       49                     1 file\n"})}),(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-bash",metastring:"ignore",children:"scala-cli hello.zip\n"})}),(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-text",children:"Hello\n"})})]}),"\n",(0,l.jsx)(s.h2,{id:"piping",children:"Piping"}),"\n",(0,l.jsx)(s.p,{children:"You can also pipe code to Scala CLI for execution:"}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:["\n",(0,l.jsx)(s.p,{children:"scripts"}),"\n",(0,l.jsxs)(c.Z,{children:[(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-bash",children:"echo 'println(\"Hello\")' | scala-cli _.sc\n"})}),(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-text",children:"Hello\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(s.li,{children:["\n",(0,l.jsx)(s.p,{children:"Scala code"}),"\n",(0,l.jsxs)(c.Z,{children:[(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-bash",children:"echo '@main def hello() = println(\"Hello\")' | scala-cli _.scala\n"})}),(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-text",children:"Hello\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(s.li,{children:["\n",(0,l.jsx)(s.p,{children:"Java code"}),"\n",(0,l.jsxs)(c.Z,{children:[(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-bash",children:"echo 'class Hello { public static void main(String args[]) { System.out.println(\"Hello\"); } }' | scala-cli _.java\n"})}),(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-text",children:"Hello\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(s.li,{children:["\n",(0,l.jsx)(s.p,{children:"Markdown code (experimental)"}),"\n",(0,l.jsxs)(c.Z,{children:[(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-bash",children:"echo '# Example Snippet\n```scala\nprintln(\"Hello\")\n```' | scala-cli _.md\n"})}),(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-text",children:"Hello\n"})})]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(s.p,{children:["More details in the ",(0,l.jsx)(s.a,{href:"/docs/guides/advanced/piping",children:"Piping guide"}),"."]}),"\n",(0,l.jsx)(s.h2,{id:"scala-cli-version",children:"Scala CLI version"}),"\n",(0,l.jsx)(s.p,{children:"Scala CLI can also run another launcher version, which can be helpful to test unreleased Scala CLI functionalities."}),"\n",(0,l.jsx)(s.admonition,{type:"warning",children:(0,l.jsx)(s.p,{children:"Running another Scala CLI version might be slower because it uses JVM-based Scala CLI launcher."})}),"\n",(0,l.jsxs)(s.p,{children:["To run another Scala CLI version, specify it with ",(0,l.jsx)(s.code,{children:"--cli-version"})," before any other argument:"]}),"\n",(0,l.jsxs)(c.Z,{children:[(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-bash",metastring:"ignore",children:"scala-cli --cli-version 0.1.17-62-g21e1cf44-SNAPSHOT version\n"})}),(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-text",children:"Scala CLI version: 0.1.17-62-g21e1cf44-SNAPSHOT\nScala version (default): 3.2.1\n"})})]}),"\n",(0,l.jsxs)(s.p,{children:["To use the latest Scala CLI nightly build, pass ",(0,l.jsx)(s.code,{children:"nightly"})," to ",(0,l.jsx)(s.code,{children:"--cli-version"})," parameter:"]}),"\n",(0,l.jsxs)(c.Z,{children:[(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-bash",metastring:"ignore",children:"scala-cli --cli-version nightly version\n"})}),(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-text",children:"Fetching Scala CLI 0.1.17-62-g21e1cf44-SNAPSHOT\nScala CLI version: 0.1.17-62-g21e1cf44-SNAPSHOT\nScala version (default): 3.2.1\n"})})]}),"\n",(0,l.jsx)(s.h2,{id:"process-substitution",children:"Process substitution"}),"\n",(0,l.jsx)(s.p,{children:"Lastly, Scala CLI also accepts input via shell process substitution:"}),"\n",(0,l.jsxs)(c.Z,{children:[(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-bash",children:"scala-cli <(echo 'println(\"Hello\")')\n"})}),(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-text",children:"Hello\n"})})]}),"\n",(0,l.jsx)(s.h2,{id:"logging",children:"Logging"}),"\n",(0,l.jsxs)(s.p,{children:["To turn off logging in the application, pass the ",(0,l.jsx)(s.code,{children:"-q"})," flag once. This will suppress all logging output except for\nerrors:"]}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-scala",metastring:"title=Hello.scala",children:'object Hello extends App {\n  println("Hello"\n}\n'})}),"\n",(0,l.jsxs)(c.Z,{children:[(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-bash",metastring:"run-fail",children:"scala-cli Hello.scala -q  \n"})}),(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-text",children:"[error] ./Hello.scala:6:3: ')' expected, but '}' found\n[error]   }\n[error]   ^\nCompilation failed\n"})})]}),"\n",(0,l.jsx)(s.p,{children:"Note that this will also suppress any logging related to tasks such as downloading dependencies, logs\nabout the start of compilation, and so on."}),"\n",(0,l.jsx)(s.h2,{id:"warning-suppression",children:"Warning suppression"}),"\n",(0,l.jsxs)(s.p,{children:["Some particular warning logs can be suppressed, either for a particular command by passing an option or with a global\nconfig.\nMore details can be found in the ",(0,l.jsx)(s.a,{href:"/docs/guides/advanced/verbosity",children:"verbosity guide"})]})]})}function p(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,l.jsx)(s,{...e,children:(0,l.jsx)(h,{...e})}):h(e)}}}]);