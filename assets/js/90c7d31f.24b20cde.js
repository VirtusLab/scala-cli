"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5572],{5479:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"reference/root-dir","title":"Project root directory","description":"Usage","source":"@site/docs/reference/root-dir.md","sourceDirName":"reference","slug":"/reference/root-dir","permalink":"/docs/reference/root-dir","draft":false,"unlisted":false,"editUrl":"https://github.com/Virtuslab/scala-cli/edit/main/website/docs/reference/root-dir.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"title":"Project root directory","sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"Dependency format","permalink":"/docs/reference/dependency"},"next":{"title":"BuildInfo","permalink":"/docs/reference/build-info"}}');var n=s(4848),t=s(8453);const o={title:"Project root directory",sidebar_position:5},c=void 0,d={},l=[{value:"Usage",id:"usage",level:2},{value:"Setting root directory",id:"setting-root-directory",level:2},{value:"Example",id:"example",level:4}];function a(e){const r={code:"code",h2:"h2",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.h2,{id:"usage",children:"Usage"}),"\n",(0,n.jsx)(r.p,{children:"Scala CLI needs a root directory:"}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsx)(r.li,{children:"to write mapped sources"}),"\n",(0,n.jsx)(r.li,{children:"to write class files"}),"\n",(0,n.jsx)(r.li,{children:"for Bloop"}),"\n"]}),"\n",(0,n.jsx)(r.h2,{id:"setting-root-directory",children:"Setting root directory"}),"\n",(0,n.jsxs)(r.p,{children:["First of all, Scala CLI checks every passed input (in the same order in which inputs were passed) for the ",(0,n.jsx)(r.code,{children:"project.scala"})," file:"]}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsxs)(r.li,{children:["If the ",(0,n.jsx)(r.code,{children:"project.scala"})," file is passed explicitly as a ",(0,n.jsx)(r.strong,{children:"source"}),", Scala CLI sets its parent directory as the root directory."]}),"\n",(0,n.jsxs)(r.li,{children:["If the input is a ",(0,n.jsx)(r.strong,{children:"directory"}),", Scala CLI looks for the ",(0,n.jsx)(r.code,{children:"project.scala"})," inside this directory. If the file is found, Scala CLI sets the passed directory as the root directory."]}),"\n"]}),"\n",(0,n.jsxs)(r.p,{children:["If more than one ",(0,n.jsx)(r.code,{children:"project.scala"})," file is found, Scala CLI uses only ",(0,n.jsx)(r.strong,{children:"the first one"})," to set the root directory and raises a ",(0,n.jsx)(r.strong,{children:"warning"})," saying which one was used."]}),"\n",(0,n.jsxs)(r.p,{children:["If no ",(0,n.jsx)(r.code,{children:"project.scala"})," files are found, Scala CLI sets the root directory based on the first file/directory input:"]}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsxs)(r.li,{children:["If the input is a ",(0,n.jsx)(r.strong,{children:"directory"}),", it is set as the root directory."]}),"\n",(0,n.jsxs)(r.li,{children:["If the input is a ",(0,n.jsx)(r.strong,{children:"file"}),", Scala CLI sets its parent directory as the root directory."]}),"\n"]}),"\n",(0,n.jsx)(r.p,{children:"If more than one file/directory input has been passed Scala CLI raises the warning saying which directory has been set as the project root directory."}),"\n",(0,n.jsxs)(r.p,{children:["If no ",(0,n.jsx)(r.code,{children:"project.scala"})," files are found and no file/directory inputs have been passed, Scala CLI sets the current working directory (where Scala CLI was invoked from) as the project root directory."]}),"\n",(0,n.jsx)(r.h4,{id:"example",children:"Example"}),"\n",(0,n.jsx)(r.p,{children:"Let's say we have the following file structure:"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{children:"project\n\u2502   project.scala\n\u2502\n\u2514\u2500\u2500\u2500dir1\n\u2502   \u2502   file1.scala\n\u2502   \u2502\n\u2502   \u2514\u2500\u2500\u2500dir2\n\u2502       \u2502   project.scala\n\u2502       \u2502   file2.scala\n\u2502   \n\u2514\u2500\u2500\u2500dir3\n    \u2502   project.scala\n    \u2502   file3.scala\n"})}),"\n",(0,n.jsx)(r.p,{children:"And the user runs the following command:"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{children:"project> scala-cli dir1/file1.scala dir1/dir2 dir3/project.scala\n"})}),"\n",(0,n.jsxs)(r.p,{children:["Scala CLI will find 2 ",(0,n.jsx)(r.code,{children:"project.scala"})," files:"]}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsxs)(r.li,{children:["inside ",(0,n.jsx)(r.code,{children:"dir2"}),", since this directory was passed as an input and it has ",(0,n.jsx)(r.code,{children:"project.scala"})," inside."]}),"\n",(0,n.jsxs)(r.li,{children:["inside ",(0,n.jsx)(r.code,{children:"dir3"}),", since ",(0,n.jsx)(r.code,{children:"dir3/project.scala"})," was passed explicitly as a source"]}),"\n"]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.code,{children:"dir1/dir2"})," was passed before ",(0,n.jsx)(r.code,{children:"dir3/project.scala"}),", so ",(0,n.jsx)(r.code,{children:"dir2"})," will be set as the ",(0,n.jsx)(r.strong,{children:"root"})," directory for this build."]}),"\n",(0,n.jsxs)(r.p,{children:["Since more than one ",(0,n.jsx)(r.code,{children:"project.scala"})," has been found, Scala CLI will raise the warning saying that more than one ",(0,n.jsx)(r.code,{children:"project.scala"})," file has been found and ",(0,n.jsx)(r.code,{children:"dir1/dir2"})," has been set as the project root directory."]})]})}function h(e={}){const{wrapper:r}={...(0,t.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(a,{...e})}):a(e)}},8453:(e,r,s)=>{s.d(r,{R:()=>o,x:()=>c});var i=s(6540);const n={},t=i.createContext(n);function o(e){const r=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),i.createElement(t.Provider,{value:r},e.children)}}}]);