"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6962],{7753:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>t,default:()=>h,frontMatter:()=>r,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"guides/power/offline","title":"Offline mode \u26a1\ufe0f","description":"Offline mode is an experimental feature.","source":"@site/docs/guides/power/offline.md","sourceDirName":"guides/power","slug":"/guides/power/offline","permalink":"/docs/guides/power/offline","draft":false,"unlisted":false,"editUrl":"https://github.com/Virtuslab/scala-cli/edit/main/website/docs/guides/power/offline.md","tags":[],"version":"current","sidebarPosition":51,"frontMatter":{"title":"Offline mode \u26a1\ufe0f","sidebar_position":51},"sidebar":"tutorialSidebar","previous":{"title":"SBT and Mill \u26a1\ufe0f","permalink":"/docs/guides/power/sbt-mill"},"next":{"title":"HTTP Proxies \u26a1\ufe0f","permalink":"/docs/guides/power/proxy"}}');var s=i(4848),o=i(8453);const r={title:"Offline mode \u26a1\ufe0f",sidebar_position:51},t=void 0,c={},l=[{value:"How to use the offline mode",id:"how-to-use-the-offline-mode",level:2},{value:"Changes in behaviour",id:"changes-in-behaviour",level:2},{value:"Scala artifacts",id:"scala-artifacts",level:3},{value:"JVM artifacts",id:"jvm-artifacts",level:3},{value:"Bloop artifacts",id:"bloop-artifacts",level:3},{value:"Dependency artifacts",id:"dependency-artifacts",level:3},{value:"Setting up the environment",id:"setting-up-the-environment",level:2},{value:"Setting up the environment manually",id:"setting-up-the-environment-manually",level:3},{value:"Testing offline mode",id:"testing-offline-mode",level:2},{value:"Clearing coursier&#39;s caches",id:"clearing-coursiers-caches",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.admonition,{type:"caution",children:[(0,s.jsx)(n.p,{children:"Offline mode is an experimental feature."}),(0,s.jsxs)(n.p,{children:["Please bear in mind that non-ideal user experience should be expected.\nIf you encounter any bugs or have feedback to share, make sure to reach out to the maintenance team\non ",(0,s.jsx)(n.a,{href:"https://github.com/VirtusLab/scala-cli",children:"GitHub"}),"."]})]}),"\n",(0,s.jsx)(n.p,{children:"The offline mode for Scala CLI was introduced to be used in two situations:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"you want to have more control over the artifacts being downloaded"}),"\n",(0,s.jsx)(n.li,{children:"your development environment has restricted access to the Internet or certain web domains"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"In this mode Scala CLI will only use local artifacts cached by coursier. Any attempts to download artifacts will fail unless they're available locally in cache or there is a known fallback.\nThis applies to everything that Scala CLI normally manages behind the scenes:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Scala language and compiler artifacts"}),"\n",(0,s.jsx)(n.li,{children:"JVM artifacts"}),"\n",(0,s.jsx)(n.li,{children:"Bloop artifacts"}),"\n",(0,s.jsx)(n.li,{children:"dependency artifacts"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"how-to-use-the-offline-mode",children:"How to use the offline mode"}),"\n",(0,s.jsxs)(n.p,{children:["To enable offline mode pass the ",(0,s.jsx)(n.code,{children:"--offline"})," flag to Scala CLI, e.g.:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",metastring:"ignore",children:"scala-cli run Main.scala --offline\n"})}),"\n",(0,s.jsxs)(n.p,{children:["It is also possible to use the ",(0,s.jsx)(n.code,{children:"COURSIER_MODE"})," environment variable or ",(0,s.jsx)(n.code,{children:"coursier.mode"})," java property."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",metastring:"ignore",children:"export COURSIER_MODE=offline\n"})}),"\n",(0,s.jsx)(n.p,{children:"or"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",metastring:"ignore",children:"scala-cli -Dcoursier.mode=offline run Main.scala \n"})}),"\n",(0,s.jsx)(n.h2,{id:"changes-in-behaviour",children:"Changes in behaviour"}),"\n",(0,s.jsx)(n.h3,{id:"scala-artifacts",children:"Scala artifacts"}),"\n",(0,s.jsx)(n.p,{children:"In offline mode Scala CLI will not perform any validation of the Scala version specified in the project, it will not be checked if such a version has been released."}),"\n",(0,s.jsx)(n.h3,{id:"jvm-artifacts",children:"JVM artifacts"}),"\n",(0,s.jsxs)(n.p,{children:["System JVM will be used or it will be fetched from local cache.\nIf a different JVM version than the system one is required, it is best to export it to the ",(0,s.jsx)(n.code,{children:"JAVA_HOME"})," environment variable.\nIt is important to know, that currently if a version is specified with ",(0,s.jsx)(n.code,{children:"--jvm"})," or ",(0,s.jsx)(n.code,{children:"using jvm"})," Scala CLI will ignore the system JVM and try to fetch via coursier."]}),"\n",(0,s.jsxs)(n.p,{children:["To start the Bloop server a JVM with version above 17 is required, if it can't be found compilation will fall back to using ",(0,s.jsx)(n.code,{children:"scalac"})," instead."]}),"\n",(0,s.jsx)(n.h3,{id:"bloop-artifacts",children:"Bloop artifacts"}),"\n",(0,s.jsxs)(n.p,{children:["If no artifacts for Bloop are available compilation falls back to using ",(0,s.jsx)(n.code,{children:"scalac"})," instead."]}),"\n",(0,s.jsx)(n.h3,{id:"dependency-artifacts",children:"Dependency artifacts"}),"\n",(0,s.jsx)(n.p,{children:"Any attempt to download a dependency will fail, so it is required to have all the dependencies cached locally before compiling."}),"\n",(0,s.jsxs)(n.p,{children:["Dependencies that reside in local repositories like ",(0,s.jsx)(n.code,{children:"~/.ivy2/local"})," will be resolved as usual."]}),"\n",(0,s.jsx)(n.h2,{id:"setting-up-the-environment",children:"Setting up the environment"}),"\n",(0,s.jsxs)(n.p,{children:["The easiest way to set up the environment is to use ",(0,s.jsx)(n.a,{href:"https://get-coursier.io",children:"Coursier"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"Installing scala artifacts:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",metastring:"ignore",children:"cs install scala:3.3.0 scalac:3.3.0\n"})}),"\n",(0,s.jsx)(n.p,{children:"Installing a JVM:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",metastring:"ignore",children:"cs java --jvm 17\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Using the two commands above is already enough for running and compiling code using ",(0,s.jsx)(n.code,{children:"scalac"}),".\nFor fetching code dependencies run:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",metastring:"ignore",children:"cs fetch com.lihaoyi::os-lib::0.9.1\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Note that the dependency format is the same as for ",(0,s.jsx)(n.code,{children:"--dep"})," and ",(0,s.jsx)(n.code,{children:"using dep"}),". More information about it ",(0,s.jsx)(n.a,{href:"/docs/guides/introduction/dependencies",children:"here"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"If you want to use Bloop, you can get it with:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",metastring:"ignore",children:"cs fetch io.github.alexarchambault.bleep:bloop-frontend_2.12:1.5.11-sc-3 \n"})}),"\n",(0,s.jsxs)(n.p,{children:["Note that Scala CLI uses a custom fork of Bloop, so simple ",(0,s.jsx)(n.code,{children:"cs install bloop"})," won't work."]}),"\n",(0,s.jsx)(n.h3,{id:"setting-up-the-environment-manually",children:"Setting up the environment manually"}),"\n",(0,s.jsx)(n.p,{children:"It is possible to copy the Scala language artifacts and dependencies to the local Coursier's cache manually.\nThis can be done by creating a directory structure like this:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:"COURSIER_CACHE_PATH\n\u2514\u2500\u2500 https\n    \u2514\u2500\u2500 repo1.maven.org\n        \u2514\u2500\u2500 maven2\n            \u2514\u2500\u2500 org\n                \u2514\u2500\u2500 scala-lang\n                    \u2514\u2500\u2500 scala-compiler\n                        \u2514\u2500\u2500 2.13.12\n                            \u251c\u2500\u2500 scala-compiler-2.13.12-sources.jar (OPTIONAL)\n                            \u251c\u2500\u2500 scala-compiler-2.13.12.jar\n                            \u2514\u2500\u2500 scala-compiler-2.13.12.pom\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Path on MacOs ",(0,s.jsx)(n.code,{children:"~/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-compiler/2.13.12"})]}),"\n",(0,s.jsx)(n.p,{children:"Same for a library:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:"COURSIER_CACHE_PATH\n\u2514\u2500\u2500 https\n    \u2514\u2500\u2500 repo1.maven.org\n        \u2514\u2500\u2500 maven2\n            \u2514\u2500\u2500 com\n                \u2514\u2500\u2500 lihaoyi\n                    \u2514\u2500\u2500 os-lib_3\n                        \u2514\u2500\u2500 0.9.1\n                            \u251c\u2500\u2500 os-lib_3-0.9.1-sources.jar (OPTIONAL)\n                            \u251c\u2500\u2500 os-lib_3-0.9.1.jar\n                            \u2514\u2500\u2500 os-lib_3-0.9.1.pom\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Path on MacOS ",(0,s.jsx)(n.code,{children:"~/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/com/lihaoyi/os-lib_3/0.9.1"})]}),"\n",(0,s.jsxs)(n.p,{children:["The first segments after the ",(0,s.jsx)(n.code,{children:"v1"})," directory are the address of the repository from which the artifact was downloaded.\nThis part can effectively be ",(0,s.jsx)(n.code,{children:"https/repo1.maven.org/maven2"})," since maven central is the default repository to use.\nThe rest of the path is the artifact's organization (split by the '.' character) and version."]}),"\n",(0,s.jsx)(n.h2,{id:"testing-offline-mode",children:"Testing offline mode"}),"\n",(0,s.jsx)(n.p,{children:"To perform a test of environment setup for offline mode, it may be useful to create a clean cache directory for coursier.\nTo do so, run:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",metastring:"ignore",children:"mkdir test-coursier-cache\nexport COURSIER_CACHE=`pwd`/test-coursier-cache\n"})}),"\n",(0,s.jsx)(n.p,{children:"And proceed with setting up the environment as described above:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",metastring:"ignore",children:"# Should fail with:\n# [error]  Error downloading org.scala-lang:scala3-compiler_3:3.3.0\nscala-cli run Main.scala --jvm 11 --offline\ncs install scala:3.3.0 scalac:3.3.0\n\n# Could fail with:\n# Error while getting https://github.com/coursier/jvm-index/raw/master/index.json\n# But may also pass on MacOS ('/usr/libexec/java_home -v' is tried)\n# or if a JVM is cached in coursier's archive cache (this cache's location can't be overridden), you may want to clear it, see section below\nscala-cli run Main.scala --jvm 11 --offline\ncs java --jvm 11\n\n# Should pass with a warning:\n# [warn]  Offline mode is ON and Bloop could not be fetched from the local cache, using scalac as fallback\nscala-cli run Main.scala --jvm 11 --offline\ncs fetch io.github.alexarchambault.bleep:bloop-frontend_2.12:1.5.11-sc-3\n\n# Should pass with a warning:\n# [warn]  Offline mode is ON and a JVM for Bloop could not be fetched from the local cache, using scalac as fallback\nscala-cli run Main.scala --jvm 11 --offline\ncs java 17\n\nShould pass with no warnings\nscala-cli run Main.scala --jvm 11 --offline\n"})}),"\n",(0,s.jsx)(n.h2,{id:"clearing-coursiers-caches",children:"Clearing coursier's caches"}),"\n",(0,s.jsxs)(n.p,{children:["Citing ",(0,s.jsx)(n.a,{href:"https://get-coursier.io/docs/cache#default-location",children:"Coursier's docs"}),": ",(0,s.jsx)("br",{}),"\nOn a system where only recent versions of coursier were ever run (>= 1.0.0-RC12-1, released on the 2017/10/31), the default cache location is platform-dependent:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["on Linux, ",(0,s.jsx)(n.code,{children:"~/.cache/coursier/v1"}),". This also applies to Linux-based CI environments, and FreeBSD too"]}),"\n",(0,s.jsxs)(n.li,{children:["on OS X, ",(0,s.jsx)(n.code,{children:"~/Library/Caches/Coursier/v1"})]}),"\n",(0,s.jsxs)(n.li,{children:["on Windows, ",(0,s.jsx)(n.code,{children:"%LOCALAPPDATA%\\Coursier\\Cache\\v1"}),", which, for user Alex, typically corresponds to ",(0,s.jsx)(n.code,{children:"C:\\Users\\Alex\\AppData\\Local\\Coursier\\Cache\\v1"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["So clearing the cache is just a matter of removing the ",(0,s.jsx)(n.code,{children:"v1"})," directory corresponding to the platform you're on.\nHowever, Coursier does use a second archive cache, which should be located in the same place as the ",(0,s.jsx)(n.code,{children:"v1"})," directory, e.g. ",(0,s.jsx)(n.code,{children:"~/.cache/coursier/arc"}),",\nthis cache's location can't be overridden, so it may be necessary to clear it for proper testing."]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>t});var a=i(6540);const s={},o=a.createContext(s);function r(e){const n=a.useContext(o);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),a.createElement(o.Provider,{value:n},e.children)}}}]);