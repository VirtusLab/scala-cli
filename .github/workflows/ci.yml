name: CI
on:
  push:
    branches:
    - master
    tags:
    - "v*"
  pull_request:
  workflow_dispatch:

jobs:
  trigger-vm:
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name == 'VirtuslabRnD/scala-cli'
    runs-on: ubuntu-latest
    steps:
      - uses: azure/login@v1
        with:
          creds: '{"clientId": "42e79051-affb-4895-b54a-56a90bc4d86b", "clientSecret": "${{ secrets.SCALA3_CLIENT_SECRET }}", "subscriptionId": "da0a842a-c933-47fd-a4db-2d1a06fbafee","tenantId": "d09acba4-fb14-464d-851a-44a7cf8a064d","activeDirectoryEndpointUrl": "https://login.microsoftonline.com", "resourceManagerEndpointUrl": "https://management.azure.com/","activeDirectoryGraphResourceId": "https://graph.windows.net/", "sqlManagementEndpointUrl": "https://management.core.windows.net:8443/", "galleryEndpointUrl": "https://gallery.azure.com/", "managementEndpointUrl": "https://management.core.windows.net/"}'
      - run: |
          az vm start -g gh-runners -n scala-3-cli

  jvm-tests:
    runs-on: ${{ matrix.OS }}
    strategy:
      fail-fast: false
      matrix:
        # Running into https://github.com/oracle/graal/issues/3171 on windows-latest / windows-2019
        OS: ["ubuntu-latest", "macos-latest", "windows-2016"]
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        submodules: true
    - uses: coursier/cache-action@v6.3
    - uses: coursier/setup-action@v1.1.1
      with:
        jvm: 8
    - name: Unit tests
      run: ./mill -i unitTests
    - name: Copy launcher
      run: ./mill -i copyJvmLauncher artifacts/
      if: runner.os == 'Linux'
    - uses: actions/upload-artifact@v2.2.4
      if: runner.os == 'Linux'
      with:
        name: launchers
        path: artifacts/
        if-no-files-found: error
        retention-days: 2
    - name: JVM integration tests
      run: ./mill -i integration.jvm.test

  native-tests:
    runs-on: ${{ matrix.OS }}
    strategy:
      fail-fast: false
      matrix:
        OS: [[ self-hosted, windows, scala-3-cli ]]
        needsVirtuslabRepo: ["${{ github.event_name == 'push' || github.event.pull_request.head.repo.full_name == 'VirtuslabRnD/scala-cli' }}"]
        include:
          - {OS: ubuntu-latest, needsVirtuslabRepo: false}
          - {OS: macos-latest, needsVirtuslabRepo: false}
        exclude:
          - OS: [ self-hosted, windows, scala-3-cli ]
            needsVirtuslabRepo: false
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        submodules: true
    - uses: coursier/cache-action@v6.3
    - uses: coursier/setup-action@v1.1.1
      with:
        jvm: 8
    - name: Generate native launcher
      run: ./mill -i show defaultNativeImage
    - name: Build OS packages
      run: .github/scripts/generate-os-packages.sh
      shell: bash
    - name: Copy artifacts
      run: ./mill -i copyDefaultLauncher artifacts/
    - uses: actions/upload-artifact@v2.2.4
      with:
        name: launchers
        path: artifacts/
        if-no-files-found: error
        retention-days: 2
    - name: Native integration tests
      if: runner.os != 'Windows' || (github.event_name == 'push' && github.ref == 'refs/heads/master')
      run: ./mill -i nativeIntegrationTests

  native-mostly-static-tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        submodules: true
    - uses: coursier/cache-action@v6.3
    - uses: coursier/setup-action@v1.1.1
      with:
        jvm: 8
    - name: Generate native launcher
      run: ./mill -i show cli-core.nativeImageMostlyStatic
    - name: Generate docker image
      run: .github/scripts/generate-docker-images-ubuntu.sh
    - name: Copy artifacts
      run: ./mill -i copyMostlyStaticLauncher artifacts/
    - uses: actions/upload-artifact@v2.2.4
      with:
        name: launchers
        path: artifacts/
        if-no-files-found: error
        retention-days: 2
    - name: Native integration tests
      run: ./mill -i integration-core.native-mostly-static.test
    - name: Docker integration tests
      run: ./mill integration.docker.test

  native-static-tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        submodules: true
    - uses: coursier/cache-action@v6.3
    - uses: coursier/setup-action@v1.1.1
      with:
        jvm: 8
    - name: Generate native launcher
      run: ./mill -i show cli-core.nativeImageStatic
    - name: Copy artifacts
      run: ./mill -i copyStaticLauncher artifacts/
    - uses: actions/upload-artifact@v2.2.4
      with:
        name: launchers
        path: artifacts/
        if-no-files-found: error
        retention-days: 2
    - name: Native integration tests
      run: ./mill -i integration-core.native-static.test

  checks:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        submodules: true
    - uses: coursier/cache-action@v6.3
    - uses: coursier/setup-action@v1.1.1
      with:
        jvm: 8
    - name: Check native-image config format
      run: ./mill -i __.checkNativeImageConfFormat
    - name: Check Ammonite availability
      run: ./mill -i 'dummy.amm[_].resolvedRunIvyDeps.'

  reference-doc:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        submodules: true
    - uses: coursier/cache-action@v6.3
    - uses: coursier/setup-action@v1.1.1
      with:
        jvm: 8
    - name: Check that reference doc is up-to-date
      run: |
        ./mill -i generate-reference-doc.run --check || (
          echo "Reference doc is not up-to-date. Run"
          echo "  ./mill -i generate-reference-doc.run"
          echo "to update it, then commit the result."
          exit 1
        )

  launchers:
    needs: [jvm-tests, native-tests, native-mostly-static-tests, native-static-tests, checks, reference-doc]
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        submodules: true
    - uses: coursier/cache-action@v6.3
    - uses: coursier/setup-action@v1.1.1
      with:
        jvm: 8
    - uses: actions/download-artifact@v2
      with:
        name: launchers
        path: artifacts/
    - run: ./mill -i uploadLaunchers artifacts/
      env:
        UPLOAD_GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  website:
    needs: launchers
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        submodules: true
    - uses: actions/setup-node@v2.4.0
      with:
        node-version: '12.x'
    - run: |
        git config --global user.name "gh-actions"
        git config --global user.email "actions@github.com"
        cd website
        yarn install
        yarn build
        yarn deploy
      env:
        GIT_USER: VirtuslabRnD
        DEPLOYMENT_BRANCH: gh-pages
        GIT_PASS: ${{ secrets.GITHUB_TOKEN }}
