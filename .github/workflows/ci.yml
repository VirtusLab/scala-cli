name: CI
on:
  push:
    branches:
    - master
    tags:
    - "v*"
  pull_request:

jobs:
  jvm-tests:
    runs-on: ${{ matrix.OS }}
    strategy:
      fail-fast: false
      matrix:
        # Running into https://github.com/oracle/graal/issues/3171 on windows-latest / windows-2019
        OS: ["ubuntu-latest", "macos-latest", "windows-2016"]
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        submodules: true
    - uses: coursier/cache-action@v6
    - uses: laughedelic/coursier-setup@v1
      with:
        jvm: 8
    - name: Unit tests
      run: ./mill -i unitTests
    - name: JVM integration tests
      run: ./mill -i integration.jvm.test
    - name: Build OS packages
      run: .github/scripts/generate-os-packages.sh
      shell: bash
      if: runner.os == 'Windows'
    - uses: actions/upload-artifact@v2.2.4
      if: runner.os == 'Windows'
      with:
        name: launchers
        path: artifacts/
        if-no-files-found: error
        retention-days: 2

  native-tests:
    runs-on: ${{ matrix.OS }}
    strategy:
      fail-fast: false
      matrix:
        OS: ["ubuntu-latest", "macos-latest"]
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        submodules: true
    - uses: coursier/cache-action@v6
    - uses: laughedelic/coursier-setup@v1
      with:
        jvm: 8
    - name: Generate native launcher
      run: ./mill -i show defaultNativeImage
    - name: Native integration tests
      run: ./mill -i nativeIntegrationTests
    - name: Build OS packages
      run: .github/scripts/generate-os-packages.sh
      shell: bash
    - name: Copy artifacts
      run: ./mill -i copyDefaultLauncher artifacts/
    - uses: actions/upload-artifact@v2.2.4
      with:
        name: launchers
        path: artifacts/
        if-no-files-found: error
        retention-days: 2

  native-mostly-static-tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        submodules: true
    - uses: coursier/cache-action@v6
    - uses: laughedelic/coursier-setup@v1
      with:
        jvm: 8
    - name: Generate native launcher
      run: ./mill -i show cli-core.nativeImageMostlyStatic
    - name: Native integration tests
      run: ./mill -i integration-core.native-mostly-static.test
    # TODO Build docker images too?
    - name: Copy artifacts
      run: ./mill -i copyMostlyStaticLauncher artifacts/
    - uses: actions/upload-artifact@v2.2.4
      with:
        name: launchers
        path: artifacts/
        if-no-files-found: error
        retention-days: 2

  native-static-tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        submodules: true
    - uses: coursier/cache-action@v6
    - uses: laughedelic/coursier-setup@v1
      with:
        jvm: 8
    - name: Generate native launcher
      run: ./mill -i show cli-core.nativeImageStatic
    - name: Native integration tests
      run: ./mill -i integration-core.native-static.test
    - name: Copy artifacts
      run: ./mill -i copyStaticLauncher artifacts/
    - uses: actions/upload-artifact@v2.2.4
      with:
        name: launchers
        path: artifacts/
        if-no-files-found: error
        retention-days: 2

  checks:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        submodules: true
    - uses: coursier/cache-action@v6
    - uses: laughedelic/coursier-setup@v1
      with:
        jvm: 8
    - name: Check native-image config format
      run: ./mill -i __.checkNativeImageConfFormat
    - name: Check Ammonite availability
      run: ./mill -i 'dummy.amm[_].resolvedRunIvyDeps.'

  reference-doc:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        submodules: true
    - uses: coursier/cache-action@v6
    - uses: laughedelic/coursier-setup@v1
      with:
        jvm: 8
    - name: Check that reference doc is up-to-date
      run: |
        ./mill -i generate-reference-doc.run --check || (
          echo "Reference doc is not up-to-date. Run"
          echo "  ./mill -i generate-reference-doc.run"
          echo "to update it, then commit the result."
          exit 1
        )

  launchers:
    needs: [jvm-tests, native-tests, native-mostly-static-tests, native-static-tests, checks, reference-doc]
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        submodules: true
    - uses: coursier/cache-action@v6
    - uses: laughedelic/coursier-setup@v1
      with:
        jvm: 8
    - uses: actions/download-artifact@v2
      with:
        name: launchers
        path: artifacts/
    - run: ./mill -i uploadLaunchers artifacts/
      env:
        UPLOAD_GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  website:
    needs: launchers
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        submodules: true
    - uses: actions/setup-node@v2.3.0
      with:
        node-version: '12.x'
    - run: |
        git config --global user.name "gh-actions"
        git config --global user.email "actions@github.com"
        cd website
        yarn install
        yarn build
        yarn deploy
      env:
        GIT_USER: VirtuslabRnD
        DEPLOYMENT_BRANCH: gh-pages
        GIT_PASS: ${{ secrets.GITHUB_TOKEN }}
