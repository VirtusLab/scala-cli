name: CI
on:
  push:
    branches:
    - master
    tags:
    - "v*"
  pull_request:

jobs:
  test:
    runs-on: ${{ matrix.OS }}
    strategy:
      fail-fast: false
      matrix:
        # Running into https://github.com/oracle/graal/issues/3171 on windows-latest / windows-2019
        OS: ["ubuntu-latest", "macos-latest", "windows-2016"]
    steps:
    - uses: actions/checkout@v2
    - uses: coursier/cache-action@v6
    - uses: laughedelic/coursier-setup@v1
      with:
        jvm: 8
    - name: Unit tests
      run: ./mill -i unitTests
    - name: JVM integration tests
      run: ./mill -i integration.jvm.test
    - name: Native integration tests
      run: ./mill -i integration.native.test
      if: runner.os == 'macOS'
    - name: Native core integration tests
      run: ./mill -i integration-core.native.test
      # not enough memory on the Linux and Windows runners,
      # only creating a native image with the core commands
      if: runner.os == 'Linux' # || runner.os == 'Windows'
    - name: Build linux packages for scala-cli
      run: .github/scripts/generate-packages-linux.sh
      if: runner.os == 'Linux'
    - name: Build macOS packages for scala-cli
      run: .github/scripts/generate-packages-mac.sh
      if: runner.os == 'macOS'
    - name: Build Windows packages for scala-cli
      shell: bash
      run: .github/scripts/generate-packages-win.sh
      if: runner.os == 'Windows'
    - name: Copy artifacts
      run: ./mill -i copyLauncher artifacts/
      if: runner.os == 'macOS'
    - name: Copy core artifacts
      run: ./mill -i copyCoreLauncher artifacts/
      if: runner.os == 'Linux' # || runner.os == 'Windows'
    - uses: actions/upload-artifact@v2.2.4
      with:
        name: launchers
        path: artifacts/
        if-no-files-found: error
        retention-days: 2

  launchers:
    needs: test
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: coursier/cache-action@v6
    - uses: laughedelic/coursier-setup@v1
      with:
        jvm: 8
    - uses: actions/download-artifact@v2
      with:
        name: launchers
        path: artifacts/
    - run: ./mill -i uploadLaunchers artifacts/
      env:
        UPLOAD_GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  website:
    needs: launchers
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2.1.5
      with:
        node-version: '12.x'
    - run: |
        git config --global user.name "gh-actions"
        git config --global user.email "actions@github.com"
        cd website
        yarn install
        yarn build
        yarn deploy
      env:
        GIT_USER: VirtuslabRnD
        DEPLOYMENT_BRANCH: gh-pages
        GIT_PASS: ${{ secrets.GITHUB_TOKEN }}
